" Initialize NeoBundle
set runtimepath+=~/.vim/bundle/neobundle.vim

" Collect bundles
call neobundle#rc(expand('~/.vim/bundle'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" Plugins
NeoBundle 'Shougo/unite.vim'
NeoBundle 'ervandew/supertab'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'Lokaltog/vim-easymotion'
NeoBundle 'terryma/vim-multiple-cursors'
NeoBundle 'scrooloose/nerdcommenter'
NeoBundle 'bronson/vim-trailing-whitespace'
NeoBundle 'bkad/CamelCaseMotion'
NeoBundle 'Yggdroot/indentLine'

" Syntax
NeoBundle 'derekwyatt/vim-scala'

" Colorschemes
NeoBundle 'noahfrederick/vim-hemisu'

" Settings
" colorscheme
color hemisu
set background=light

hi multiple_cursors_cursor cterm=none
hi link multiple_cursors_visual Visual

" TODO: find out why that's not working
hi link scalaKeywordModifier Keyword
hi link scalaNameDefinition  Keyword

" indent lines with |
"let g:indentLine_char = '|'

" mappings
map <silent> <leader>/ <plug>NERDCommenterToggle<CR>

" replace standart serach with easymotion
map  / <plug>(easymotion-sn)
omap / <plug>(easymotion-tn)
"map  <Tab> <plug>(easymotion-next)
"map  <S-Tab> <plug>(easymotion-prev)

map <leader>w <plug>(easymotion-lineanywhere)

let g:EasyMotion_smartcase = 1
let g:EasyMotion_keys = 'asdfjkl;weio'

map <silent> w <plug>CamelCaseMotion_w
map <silent> b <plug>CamelCaseMotion_b
"sunmap w
"sunmap b

" unite
" remove trailing whitespace highlighting in unite window
"au BufEnter *     hi ExtraWhiteSpace ctermbg=darkred
"au FileType unite hi ExtraWhiteSpace ctermbg=none

let g:unite_split_rule = 'botright'
let g:unite_force_overwrite_statusline = 0
let g:unite_winheight = 12

map <silent> <leader>b :Unite buffer<CR>
map <silent> <leader>f :Unite file<CR>

" open new empty tab and show file prompt
map <silent> <leader>t :tabnew<CR>:Unite file<CR>

" automation
" remove trailing whitespaces on save
au BufWritePost * :FixWhitespace

